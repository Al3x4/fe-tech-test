{"version":3,"sources":["reportWebVitals.ts","index.tsx","components/charts/Donut.tsx","components/Card.tsx","components/Modal.tsx","components/Skeleton.tsx","components/Sidebar.tsx","components/Layout.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","lazy","ReactDOM","render","StrictMode","fallback","Skeleton","document","getElementById","defaultOptions","animation","plugins","legend","position","align","labels","boxWidth","usePointStyle","pointStyle","DoughnutChart","data","options","type","merge","Card","handleClick","description","name","prevTotalViews","totalViews","videoImage","yearAndDurationWithPara","match","yearAndDuration","push","slice","length","difference","total","className","role","onClick","visible","src","alt","Modal","setModal","genre","provider","formatDataForChart","accessor","chartData","datasets","backgroundColor","borderWidth","borderColor","Object","keys","filter","key","map","id","e","target","to","pathname","toLowerCase","replace","state","Sidebar","useState","collapseShow","setCollapseShow","path","component","icon","routes","r","activeClassName","exact","Layout","children"],"mappings":"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","file":"static/js/main.7f416b20.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { lazy, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Skeleton } from 'components'\nimport './index.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport reportWebVitals from './reportWebVitals'\n\nconst App = lazy(() => import('./App'))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={Skeleton}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { FC } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport { ChartData, ChartOptions } from 'chart.js/auto'\nimport merge from 'lodash.merge'\n\ntype Props = {\n  data: ChartData\n  options?: ChartOptions\n}\n\nconst defaultOptions = {\n  animation: false,\n  plugins: {\n    legend: {\n      position: 'right',\n      align: 'center',\n      labels: {\n        boxWidth: 7,\n        usePointStyle: true,\n        pointStyle: 'circle',\n      },\n    },\n  },\n}\n\nconst DoughnutChart: FC<Props> = ({ data, options }) => (\n  <Doughnut\n    type='doughnut'\n    data={data}\n    options={merge(defaultOptions, options)}\n  />\n)\n\nexport default DoughnutChart\n","import { FC } from 'react'\nimport { DatumI } from 'models/types'\nimport Donut from 'components/charts/Donut'\nimport { ChartData } from 'chart.js/auto'\n\ntype Props = {\n  data: DatumI\n  extra?: any[]\n  handleClick: React.Dispatch<\n    React.SetStateAction<{\n      visible: boolean\n      data: DatumI\n    }>\n  >\n}\n\nconst Card: FC<Props> = ({ data, handleClick }) => {\n  const { description, name, prevTotalViews, totalViews, videoImage } = data\n\n  // get year and duration from description\n  const yearAndDurationWithPara = description.match(/\\(([^)]+)\\)/g)\n  const yearAndDuration: any[] = []\n  if (yearAndDurationWithPara) {\n    yearAndDuration.push(\n      yearAndDurationWithPara[0].slice(1, yearAndDurationWithPara[0].length - 1)\n    )\n    yearAndDuration.push(\n      yearAndDurationWithPara[1].slice(1, yearAndDurationWithPara[1].length - 6)\n    )\n  }\n  const difference = prevTotalViews.total - totalViews.total\n\n  return (\n    <div\n      className='w-full md:w-6/12 lg:w-4/12 px-4 transition duration-300 ease-in-out transform hover:-translate-y-1'\n      role='button'\n      onClick={() =>\n        handleClick({\n          visible: true,\n          data: data,\n        })\n      }\n    >\n      <div className='w-full rounded flex flex-col lg:flex-row bg-white shadow-md my-14 '>\n        <div className='w-6/12 h-56 lg:h-64 mx-auto lg:w-3/5 -mt-14 lg:ml-6 mb-6 rounded-md overflow-hidden shadow-md'>\n          <img\n            className='object-cover h-full w-full'\n            src={videoImage}\n            alt={name}\n          />\n        </div>\n        <div className='w-10/12 lg:w-2/3 mx-auto mb-4 lg:m-4 lg:mb-6 text-center md:text-left flex flex-col justify-between'>\n          <h5 className='text-blueGray-400 uppercase font-bold text-md'>\n            {name}\n          </h5>\n          <div className='text-blue-500 uppercase font-light text-4xl mt-4'>\n            <span className='block text-xs text-blueGray-400 font-bold'>\n              Total views\n            </span>\n            {totalViews.total}\n          </div>\n\n          <div className='text-sm text-white mt-4'>\n            <span\n              className={`${\n                difference > 0 ? 'bg-emerald-400' : 'bg-pink-500'\n              } mr-2 px-2 py-1 rounded-full whitespace-nowrap`}\n            >\n              <i\n                className={`fas ${\n                  difference > 0 ? 'fa-arrow-up' : 'fa-arrow-down'\n                }`}\n              ></i>{' '}\n              {difference}\n            </span>\n            <span className='whitespace-nowrap text-blueGray-400'>\n              Since last month\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import { FC } from 'react'\nimport { DatumI } from 'models/types'\nimport Donut from 'components/charts/Donut'\nimport { ChartData } from 'chart.js/auto'\nimport { Link, NavLink } from 'react-router-dom'\n\ntype Props = {\n  data: DatumI\n  extra?: any[]\n  setModal: React.Dispatch<\n    React.SetStateAction<{\n      visible: boolean\n      data: DatumI\n    }>\n  >\n}\n\nconst Modal: FC<Props> = ({ data, setModal }) => {\n  const {\n    description,\n    genre,\n    name,\n    prevTotalViews,\n    provider,\n    totalViews,\n    videoImage,\n  } = data\n  // get year and duration from description\n\n  const yearAndDurationWithPara = description.match(/\\(([^)]+)\\)/g)\n  const yearAndDuration: any[] = []\n  if (yearAndDurationWithPara) {\n    yearAndDuration.push(\n      yearAndDurationWithPara[0].slice(1, yearAndDurationWithPara[0].length - 1)\n    )\n    yearAndDuration.push(\n      yearAndDurationWithPara[1].slice(1, yearAndDurationWithPara[1].length - 6)\n    )\n  }\n  const difference = prevTotalViews.total - totalViews.total\n  const formatDataForChart = (\n    data: DatumI,\n    accessor: 'prevTotalViews' | 'totalViews'\n  ): ChartData => {\n    const chartColors: string[] = ['#2563EB', '#DB2777', '#8B5CF6']\n\n    const chartData: ChartData = {\n      datasets: [\n        {\n          data: [],\n          backgroundColor: chartColors,\n          borderWidth: 5,\n          borderColor: 'transparent',\n        },\n      ],\n      labels: Object.keys(data[accessor]).filter((key) => key !== 'total'),\n    }\n\n    chartData.datasets[0].data = Object.keys(prevTotalViews)\n      .filter((key) => key !== 'total')\n      .map((key) => data[accessor][key as 'now-tv' | 'sky-go' | 'peacock'])\n\n    return chartData\n  }\n  return (\n    <>\n      <div\n        id='modal-parent'\n        className='justify-center items-center flex overflow-x-hidden overflow-y-scroll fixed inset-0 z-50 outline-none focus:outline-none'\n        onClick={(e) => {\n          if ((e.target as HTMLDivElement).id === 'modal-parent') {\n            return setModal({\n              data: data,\n              visible: false,\n            })\n          }\n        }}\n      >\n        <div className='relative my-6 mx-4 md:mx-auto max-w-3xl px-2'>\n          {/*content*/}\n          <div className='border-0 rounded-lg shadow-lg relative flex flex-col w-full mx-auto bg-white outline-none focus:outline-none mt-48 md:mt-24'>\n            <div className='w-full h-10 flex items-center justify-end p-1'>\n              <NavLink\n                to={{\n                  pathname: `/content/${data.name\n                    .toLowerCase()\n                    .replace(/ /g, '-')\n                    .replace(/[^\\w-]+/g, '')}`,\n                  state: data,\n                }}\n                className='w-8 h-8 rounded text-2xl  flex items-center justify-around  text-blueGray-400 hover:text-blueGray-800'\n              >\n                <span>\n                  <i className='fas fa-plus-circle'></i>\n                </span>\n              </NavLink>\n              <div\n                role='button'\n                onClick={() =>\n                  setModal({\n                    data: data,\n                    visible: false,\n                  })\n                }\n                className='w-8 h-8 rounded text-2xl  flex items-center justify-around  text-blueGray-400 hover:text-blueGray-800'\n              >\n                <span>\n                  <i className='fas fa-times-circle'></i>\n                </span>\n              </div>\n            </div>\n            {/*body*/}\n            <div className='relative p-6 flex flex-col md:flex-row'>\n              <div className='w-6/12 md:w-1/3 rounded-md overflow-hidden -mt-24 shadow'>\n                <NavLink\n                  to={{\n                    pathname: `/content/${data.name\n                      .toLowerCase()\n                      .replace(/ /g, '-')\n                      .replace(/[^\\w-]+/g, '')}`,\n                    state: data,\n                  }}\n                >\n                  <img src={videoImage} alt={name} />\n                </NavLink>\n              </div>\n\n              <div className='mt-4 mx-4 w-11/12 md:w-2/3 flex flex-col justify-between  flex-grow '>\n                <div className='w-full flex items-top justify-between flex-grow'>\n                  <div>\n                    <h5 className='text-blueGray-800 uppercase font-bold text-4xl'>\n                      {name}\n                    </h5>\n                    <div className='text-sm text-blueGray-400 font-bold'>\n                      {yearAndDuration[0]}{' '}\n                    </div>\n                    <div className='text-sm text-blueGray-400 font-bold'>\n                      {yearAndDuration[1]} minutes\n                    </div>\n                  </div>\n\n                  <div className='text-blue-500 uppercase font-light text-3xl md:text-5xl text-right '>\n                    <span className='block text-sm text-blueGray-400 font-bold px-1'>\n                      Total views\n                    </span>\n                    {totalViews.total}\n                    <div className='text-sm text-white mt-4'>\n                      <span\n                        className={`${\n                          difference > 0 ? 'bg-emerald-400' : 'bg-pink-500'\n                        } px-2 py-1 rounded-full whitespace-nowrap`}\n                      >\n                        <i\n                          className={`fas ${\n                            difference > 0 ? 'fa-arrow-up' : 'fa-arrow-down'\n                          }`}\n                        ></i>{' '}\n                        {difference}\n                      </span>\n                      <span className='block whitespace-nowrap text-blueGray-400 text-xs lowercase mt-2'>\n                        from last month\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='w-full flex flex-col items-start justify-between'>\n                  <div className='text-sm text-blueGray-400 font-bold'>\n                    {provider}\n                  </div>\n                  <div className='text-sm text-blueGray-100 flex flex-wrap'>\n                    {genre.map((genre) => (\n                      <span className='text-xs leading-5 font-semibold mr-1 mt-2 rounded-full bg-blueGray-400 px-2 '>\n                        {genre}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <p className='mb-6 mx-6 px-2 text-blueGray-500 text-xs md:text-base leading-relaxed border-l-8 border-blueGray-200'>\n              {description}\n            </p>\n            <hr />\n            <div className='flex flex-col md:flex-row w-full items-center justify-around'>\n              <div className='w-full md:w-1/3 px-6 py-6 text-blue-500 text-bold text-lg'>\n                Total views {totalViews.total}\n                <div className='w-36 h-20 md:w-40 overflow-hidden flex items-center justify-around mt-2'>\n                  <Donut\n                    data={formatDataForChart(data, 'totalViews')}\n                    options={{\n                      plugins: {\n                        legend: {\n                          position: 'right',\n                          align: 'center',\n                        },\n                      },\n                    }}\n                  ></Donut>\n                </div>\n              </div>\n              <div className='w-full md:w-1/3 px-6 py-6 text-blue-500 text-bold text-lg'>\n                Prev total {prevTotalViews.total}\n                <div className='w-36 h-20 md:w-40 overflow-hidden flex items-center justify-around mt-2'>\n                  <Donut\n                    data={formatDataForChart(data, 'prevTotalViews')}\n                    options={{\n                      plugins: {\n                        legend: {\n                          position: 'right',\n                          align: 'center',\n                        },\n                      },\n                    }}\n                  ></Donut>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='opacity-50 fixed inset-0 z-40 bg-black'></div>\n    </>\n  )\n}\n\nexport default Modal\n","import { FC } from 'react'\n\nconst Skeleton: FC = () => {\n  // this needs workl\n  return (\n    <div className='bg-gray-100 w-full h-screen p-8 flex flex-wrap'>\n      <div className='w-full h-56 animate-pulse mb-4 bg-blueGray-300'></div>\n      <div className='w-full h-56 animate-pulse mb-4 bg-blueGray-300'></div>\n      <div className='w-full h-56 animate-pulse mb-4 bg-blueGray-300'></div>\n      <div className='w-full h-56 animate-pulse mb-4 bg-blueGray-300'></div>\n    </div>\n  )\n}\n\nexport default Skeleton\n","import { FC, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Sidebar: FC = () => {\n  const [collapseShow, setCollapseShow] = useState(false)\n  const [routes] = useState([\n    {\n      path: '/',\n      component: 'Overview',\n      icon: 'fa-tv',\n    },\n    {\n      path: '/content',\n      component: 'Content',\n      icon: 'fa-video',\n    },\n  ])\n  return (\n    <>\n      <nav className='md:left-0 md:block md:fixed md:top-0 md:bottom-0 md:overflow-y-auto md:flex-row md:flex-nowrap md:overflow-hidden shadow-xl bg-white flex flex-wrap items-center justify-between relative md:w-64 z-10 py-4 px-6 md:px-0 '>\n        <div className='md:flex-col md:items-stretch md:min-h-full md:flex-nowrap px-0 flex flex-wrap items-center justify-between w-full mx-auto'>\n          {/* Toggler */}\n          <button\n            className='w-12 h-12 cursor-pointer  text-black opacity-50 md:hidden px-3 py-1 text-xl leading-none bg-transparent rounded border border-solid border-transparent'\n            type='button'\n            onClick={() => setCollapseShow(!collapseShow)}\n          >\n            {collapseShow ? (\n              <i className='fas fa-times'></i>\n            ) : (\n              <i className='fas fa-hamburger'></i>\n            )}\n          </button>\n          {/* Brand */}\n          <NavLink\n            className='md:block text-left md:py-3 md:px-6  text-blueGray-600 mr-0 inline-block whitespace-nowrap text-sm uppercase font-bold p-4 px-0'\n            to='/'\n          >\n            FE Tech Test\n          </NavLink>\n\n          <div\n            className={`md:flex md:flex-col md:items-stretch md:opacity-100 md:relative md:mt-4 md:shadow-none shadow-sm absolute top-0 left-0 right-0 z-40 overflow-y-auto overflow-x-hidden h-auto items-center flex-1 rounded \n              ${collapseShow ? 'bg-white mt-16 mx-3 py-3 px-7' : 'hidden'}`}\n          >\n            {/* Navigation */}\n            <ul className='md:flex-col md:min-w-full flex flex-col list-none'>\n              {routes.map((r) => (\n                <li className='items-center'>\n                  <NavLink\n                    className='text-xs uppercase py-3 px-6 font-bold block text-blueGray-600 transition duration-200 ease-in-out transform  hover:text-blueGray-900 hover:bg-indigo-100'\n                    activeClassName='bg-indigo-100'\n                    exact\n                    to={r.path}\n                  >\n                    <i className={`fas ${r.icon} opacity-75 mr-2 text-sm`}></i>{' '}\n                    {r.component}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Sidebar\n","import { FC } from 'react'\n\nimport Sidebar from './Sidebar'\n\nconst Layout: FC = ({ children }) => (\n  <>\n    <Sidebar />\n    <div className='relative md:ml-64'>\n      <div className='w-full'>{children}</div>\n    </div>\n  </>\n)\n\nexport default Layout\n"],"sourceRoot":""}