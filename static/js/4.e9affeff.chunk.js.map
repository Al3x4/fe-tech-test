{"version":3,"sources":["hooks/useDataFetcher.ts","views/Content.tsx","components/charts/LineChart.tsx","components/charts/BarChart.tsx","views/Event.tsx","components/charts/Table.tsx","views/Overview.tsx","pages/Overview.tsx","App.tsx","pages/Content.tsx","pages/Event.tsx"],"names":["useDataFetcher","url","useSWR","fetch","then","res","json","suspense","Content","useState","visible","data","modal","setModal","Modal","className","sort","a","b","totalViews","total","map","datum","Card","handleClick","defaultOptions","maintainAspectRatio","responsive","scales","x","type","plugins","legend","align","position","labels","boxWidth","usePointStyle","pointStyle","tooltip","mode","intersect","LineChart","options","merge","BarChart","Event","props","description","assetImage","genre","duration","name","prevTotalViews","provider","videoImage","formatDataForChartTimeseries","labelFormatter","datasets","label","d","value","fill","radius","capBezierPoints","borderColor","backgroundColor","timestamp","formatDataForPieChart","accessor","chartData","borderWidth","Object","keys","filter","key","yearAndDurationWithPara","match","yearAndDuration","push","slice","length","difference","src","alt","Donut","v","Date","getHours","Table","formatDataForChart","scope","role","onClick","Overview","OverviewPage","routes","path","component","fallback","exact","location","state","App","route","render","to"],"mappings":"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","file":"static/js/4.e9affeff.chunk.js","sourcesContent":["import useSWR, { SWRResponse } from 'swr'\n\ninterface SuspenseResponseInterface extends SWRResponse<any, any> {\n  data: any\n}\n\nexport const useDataFetcher = (url: RequestInfo) => {\n  return useSWR(\n    url as string, // using it here as key\n    () => fetch(url).then((res) => res.json()),\n    { suspense: true }\n  ) as SuspenseResponseInterface\n}\n","import { FC, useState } from 'react'\nimport { useDataFetcher } from 'hooks/useDataFetcher'\nimport Card from 'components/Card'\nimport { DatumI } from 'models/types'\nimport Modal from 'components/Modal'\n\nconst content_url =\n  'https://my-json-server.typicode.com/alb90/aieng-tech-test-assets/data'\n\nconst Content: FC = () => {\n  const [modal, setModal] = useState({ visible: false, data: {} as DatumI })\n  const { data } = useDataFetcher(content_url)\n\n  return (\n    <>\n      {modal.visible ? (\n        <Modal data={modal.data} setModal={setModal}></Modal>\n      ) : null}\n      <div className='relative '>\n        <h2 className='px-12 pt-12 text-blueGray-500 text-3xl text-light uppercase tracking-wide'>\n          <i className='fas fa-video text-blueGray-600 mr-2'></i> Content\n        </h2>\n\n        <div className='px-4 md:px-10 mx-auto w-full pb-32 pt-8'>\n          <div className='flex items-center justify-between flex-wrap'>\n            {[...data]\n              .sort((a: DatumI, b: DatumI) => {\n                if (a.totalViews.total < b.totalViews.total) return 1\n                return -1\n              })\n              .map((datum: DatumI) => {\n                return (\n                  <Card\n                    data={datum}\n                    handleClick={() =>\n                      setModal({\n                        visible: true,\n                        data: datum,\n                      })\n                    }\n                  ></Card>\n                )\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Content\n","import { FC } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport { ChartData, ChartOptions } from 'chart.js/auto'\nimport 'chartjs-adapter-date-fns'\nimport merge from 'lodash.merge'\n\ntype Props = {\n  data: ChartData\n  options?: ChartOptions\n}\n\nconst defaultOptions: ChartOptions = {\n  maintainAspectRatio: false,\n  responsive: true,\n  scales: {\n    x: {\n      type: 'timeseries',\n    },\n  },\n  plugins: {\n    legend: {\n      align: 'end',\n      position: 'bottom',\n      labels: {\n        boxWidth: 7,\n        usePointStyle: true,\n        pointStyle: 'circle',\n      },\n    },\n    tooltip: {\n      mode: 'index',\n      intersect: false,\n    },\n  },\n}\nconst LineChart: FC<Props> = ({ data, options }) => (\n  <div className='w-full h-full'>\n    <Line type='line' data={data} options={merge(defaultOptions, options)} />\n  </div>\n)\nexport default LineChart\n","import { FC } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport { ChartData, ChartOptions } from 'chart.js/auto'\nimport 'chartjs-adapter-date-fns'\nimport merge from 'lodash.merge'\n\ntype Props = {\n  data: ChartData\n  options?: ChartOptions\n}\n\nconst defaultOptions: ChartOptions = {\n  maintainAspectRatio: false,\n  responsive: true,\n  plugins: {\n    legend: {\n      align: 'end',\n      position: 'bottom',\n      labels: {\n        boxWidth: 7,\n        usePointStyle: true,\n        pointStyle: 'circle',\n      },\n    },\n    tooltip: {\n      mode: 'index',\n      intersect: false,\n    },\n  },\n}\n\nconst BarChart: FC<Props> = ({ data, options }) => (\n  <div className='w-full h-full'>\n    <Bar type='bar' data={data} options={merge(defaultOptions, options)} />\n  </div>\n)\nexport default BarChart\n","import { FC } from 'react'\nimport { useDataFetcher } from 'hooks/useDataFetcher'\n\nimport { ChartData } from 'chart.js/auto'\nimport { DatumI, TimeseriesDatumI } from 'models/types'\nimport { Donut, LineChart, BarChart } from 'components/charts'\n\nconst timeseries_url =\n  'https://my-json-server.typicode.com/alb90/aieng-tech-test-timeseries/data'\n\ntype Props = {\n  data: DatumI\n}\nconst Event: FC<Props> = (props) => {\n  const {\n    assetImage,\n    description,\n    duration,\n    genre,\n    name,\n    prevTotalViews,\n    provider,\n    totalViews,\n    videoImage,\n  } = props.data\n  const { data } = useDataFetcher(timeseries_url)\n\n  const formatDataForChartTimeseries = (\n    data: TimeseriesDatumI[],\n    labelFormatter?: any\n  ): ChartData => {\n    const chartData: ChartData = {\n      datasets: [\n        {\n          label: 'Total views',\n          data: data.map((d) => d.value),\n          fill: false,\n          radius: 3,\n          capBezierPoints: true,\n          borderColor: '#32cec6',\n          backgroundColor: '#32cec6',\n        },\n      ],\n      labels: data.map((d) =>\n        labelFormatter ? labelFormatter(d.timestamp) : d.timestamp\n      ),\n    }\n\n    return chartData\n  }\n  const formatDataForPieChart = (\n    data: DatumI,\n    accessor: 'prevTotalViews' | 'totalViews'\n  ): ChartData => {\n    const chartColors: string[] = ['#2563EB', '#DB2777', '#8B5CF6']\n\n    const chartData: ChartData = {\n      datasets: [\n        {\n          data: [],\n          backgroundColor: chartColors,\n          borderWidth: 5,\n          borderColor: 'transparent',\n        },\n      ],\n      labels: Object.keys(data[accessor]).filter((key) => key !== 'total'),\n    }\n\n    chartData.datasets[0].data = Object.keys(prevTotalViews)\n      .filter((key) => key !== 'total')\n      .map((key) => data[accessor][key as 'now-tv' | 'sky-go' | 'peacock'])\n\n    return chartData\n  }\n\n  const yearAndDurationWithPara = description.match(/\\(([^)]+)\\)/g)\n  const yearAndDuration: any[] = []\n  if (yearAndDurationWithPara) {\n    yearAndDuration.push(\n      yearAndDurationWithPara[0].slice(1, yearAndDurationWithPara[0].length - 1)\n    )\n    yearAndDuration.push(\n      yearAndDurationWithPara[1].slice(1, yearAndDurationWithPara[1].length - 6)\n    )\n  }\n  const difference = prevTotalViews.total - totalViews.total\n\n  return (\n    <>\n      <div className='relative bg-gradient-to-t from-indigo-900 to-blueGray-900 -mb-96 '>\n        <img\n          src={videoImage}\n          alt={name}\n          className='w-full h-full absolute object-cover opacity-25'\n        />\n        <div className='i just space py-64 md:py-48 '></div>\n      </div>\n\n      <div className='z-50 max-w-6xl'>\n        <div className='relative flex flex-col w-full outline-none focus:outline-none md:mt-24'>\n          {/*body*/}\n          <div className='relative p-6 flex flex-col md:flex-row items-center lg:items-start'>\n            <div className='w-6/12 md:w-1/3 rounded-md overflow-hidden -mt-24 mx-auto'>\n              <img src={videoImage} alt={name} />\n            </div>\n\n            <div className='mx-4 mt-5 md:mt-44 w-full md:w-2/3 flex flex-col justify-between flex-grow '>\n              <div className='w-full flex items-top justify-between flex-grow'>\n                <div>\n                  <h5 className='text-blueGray-100 uppercase font-bold text-4xl'>\n                    {name}\n                  </h5>\n                  <div className='text-sm text-blueGray-100 font-bold'>\n                    {yearAndDuration[0]}{' '}\n                  </div>\n                  <div className='text-sm text-blueGray-100 font-bold'>\n                    {yearAndDuration[1]} minutes\n                  </div>\n                </div>\n                <div className='text-blue-100 uppercase font-light text-5xl text-right '>\n                  <span className='block text-sm text-blueGray-100 font-bold px-1'>\n                    Total views\n                  </span>\n                  {totalViews.total}\n                  <div className='text-sm text-white mt-3'>\n                    <span\n                      className={`${\n                        difference > 0 ? 'bg-emerald-400' : 'bg-pink-500'\n                      } px-2 py-1 rounded-full whitespace-nowrap`}\n                    >\n                      <i\n                        className={`fas ${\n                          difference > 0 ? 'fa-arrow-up' : 'fa-arrow-down'\n                        }`}\n                      ></i>{' '}\n                      {difference}\n                    </span>\n                    <span className='block whitespace-nowrap text-blueGray-400 text-xs lowercase mt-2'>\n                      from last month\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='w-full flex flex-col items-start justify-between'>\n                <div className='text-sm text-blueGray-400 font-bold'>\n                  {provider}\n                </div>\n                <div className='text-sm text-blueGray-100 flex flex-wrap'>\n                  {genre.map((genre) => (\n                    <span className='text-xs leading-5 font-semibold mr-1 mt-2 rounded-full bg-blueGray-400 px-2 '>\n                      {genre}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <p className='mb-4 mx-6 px-2 py-8 text-blueGray-500 text-md leading-relaxed border-l-8 border-blueGray-200'>\n            {description}\n          </p>\n        </div>\n\n        <div className='flex flex-wrap flex-col md:flex-row px-2'>\n          <div className='p-4 mx-auto w-full md:w-9/12'>\n            <div className='w-full rounded-md shadow-md bg-white'>\n              <h3 className='text-lg font-bold text-blueGray-800 mr-10 pt-4 pl-4'>\n                Total views\n              </h3>\n              <hr className='mt-2 mb-3 w-full' />\n              <div className='p-4 h-56'>\n                <LineChart data={formatDataForChartTimeseries(data)} />\n              </div>\n            </div>\n          </div>\n          <div className='p-4 mx-auto w-full md:w-3/12'>\n            <div className='w-full rounded-md shadow-md bg-white'>\n              <div className=' flex items-center justify-between px-4 pt-4'>\n                <h3 className='text-lg font-bold text-blue-800'>Total views</h3>\n              </div>\n\n              <hr className='mt-2 mb-3 w-full' />\n              <div className='p-4 relative flex items-center justify-around'>\n                <span className='absolute top-1/3 mt-3 text-lg font-bold text-blue-800'>\n                  {totalViews.total}\n                </span>\n                <Donut\n                  data={formatDataForPieChart(props.data, 'totalViews')}\n                  options={{\n                    plugins: {\n                      legend: {\n                        position: 'bottom',\n                        align: 'center',\n                      },\n                    },\n                  }}\n                ></Donut>\n              </div>\n            </div>\n          </div>\n          <div className='p-4 mx-auto w-full md:w-9/12'>\n            <div className='w-full rounded-md shadow-md bg-white'>\n              <h3 className='text-lg font-bold text-blueGray-800 mr-10 pt-4 pl-4'>\n                Total views\n              </h3>\n              <hr className='mt-2 mb-3 w-full' />\n              <div className='p-4 h-56'>\n                <BarChart\n                  data={formatDataForChartTimeseries(data, (v: any) =>\n                    new Date(v).getHours()\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n          <div className='p-4 mx-auto w-full md:w-3/12'>\n            <div className='w-full rounded-md shadow-md bg-white'>\n              <div className=' flex items-center justify-between px-4 pt-4'>\n                <h3 className='text-lg font-bold text-blue-800'>\n                  Previous views\n                </h3>\n              </div>\n              <hr className='mt-2 mb-3 w-full' />\n              <div className='p-4 relative flex items-center justify-around'>\n                <span className='absolute top-1/3 mt-3 text-lg font-bold text-blue-800'>\n                  {prevTotalViews.total}\n                </span>\n                <Donut\n                  data={formatDataForPieChart(props.data, 'prevTotalViews')}\n                  options={{\n                    plugins: {\n                      legend: {\n                        position: 'bottom',\n                        align: 'center',\n                      },\n                    },\n                  }}\n                ></Donut>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Event\n","import { FC, useState } from 'react'\nimport { DatumI } from 'models/types'\nimport Donut from 'components/charts/Donut'\n\nimport { ChartData } from 'chart.js/auto'\n\ntype Props = {\n  data: DatumI[]\n  handleClick: React.Dispatch<\n    React.SetStateAction<{\n      visible: boolean\n      data: DatumI\n    }>\n  >\n}\n\nconst Table: FC<Props> = ({ data, handleClick }) => {\n  const formatDataForChart = (data: DatumI): ChartData => {\n    const chartColors: string[] = [\n      '#2563EB',\n      '#DB2777',\n      '#8B5CF6',\n      '#32cec6',\n      '#F9A8D4',\n      '#FCD34D',\n    ]\n\n    const chartData: ChartData = {\n      datasets: [\n        {\n          data: [],\n          backgroundColor: chartColors,\n          borderWidth: 5,\n          borderColor: 'transparent',\n        },\n      ],\n      labels: Object.keys(data.prevTotalViews).filter((key) => key !== 'total'),\n    }\n\n    chartData.datasets[0].data = Object.keys(data.prevTotalViews)\n      .filter((key) => key !== 'total')\n      .map((key) => data.prevTotalViews[key as 'now-tv' | 'sky-go' | 'peacock'])\n\n    return chartData\n  }\n  return (\n    <>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n            <div className='shadow overflow-hidden border-b border-gray-200 rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200 table-auto'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-2 md:px-6  py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                    >\n                      Name\n                    </th>\n                    <th\n                      scope='col'\n                      className='hidden md:table-cell px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                    >\n                      Provider\n                    </th>\n                    <th\n                      scope='col'\n                      className='hidden md:table-cell px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                    >\n                      Genre\n                    </th>\n                    <th\n                      scope='col'\n                      className='hidden md:table-cell px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                    >\n                      Total views\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-2 md:px-6  py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                    >\n                      Views split\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='bg-white divide-y divide-gray-200'>\n                  {data.map((datum) => {\n                    // get year and duration from description\n                    const yearAndDurationWithPara = datum.description.match(\n                      /\\(([^)]+)\\)/g\n                    )\n                    const yearAndDuration: any[] = []\n                    if (yearAndDurationWithPara) {\n                      yearAndDuration.push(\n                        yearAndDurationWithPara[0].slice(\n                          1,\n                          yearAndDurationWithPara[0].length - 1\n                        )\n                      )\n                      yearAndDuration.push(\n                        yearAndDurationWithPara[1].slice(\n                          1,\n                          yearAndDurationWithPara[1].length - 6\n                        )\n                      )\n                    }\n                    return (\n                      <tr\n                        className='cursor-pointer  transition duration-300 ease-in-out transform hover:bg-sky-50'\n                        role='button'\n                        onClick={() =>\n                          handleClick({\n                            visible: true,\n                            data: datum,\n                          })\n                        }\n                      >\n                        <td className='px-2 md:px-6 py-4 whitespace-normal w-1/3 '>\n                          <div className='flex items-top'>\n                            <div className='flex-shrink-0 w-16 md:w-20 rounded overflow-hidden shadow-md'>\n                              <img\n                                className='object-cover w-full h-full'\n                                src={datum.assetImage}\n                                alt={datum.name}\n                              />\n                            </div>\n                            <div className='ml-2 md:ml-4'>\n                              <div className='text:md md:text-lg text-blueGray-900'>\n                                {datum.name}\n                              </div>\n                              <div className='hidden md:block text-sm text-blueGray-400 font-bold'>\n                                {yearAndDuration[0]}\n                              </div>\n                              <div className='hidden md:block text-sm text-blueGray-400 font-bold'>\n                                {yearAndDuration[1]} minutes\n                              </div>\n                              <div className='md:hidden text-xs text-blueGray-400 font-bold'>\n                                {datum.provider}\n                              </div>\n                              <div className='md:hidden text-sm text-blue-500 font-bold'>\n                                {datum.totalViews.total} views\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className='hidden md:table-cell px-6 py-4 whitespace-nowrap'>\n                          <div className='text-sm text-blueGray-400 font-bold'>\n                            {datum.provider}\n                          </div>\n                        </td>\n                        <td className='hidden md:table-cell px-6 py-4 '>\n                          <div className='text-sm text-blueGray-100 flex flex-wrap w-36'>\n                            {datum.genre.map((genre) => (\n                              <span className='text-xs leading-5 font-semibold m-1 rounded-full bg-blueGray-400 px-2 '>\n                                {genre}\n                              </span>\n                            ))}\n                          </div>\n                        </td>\n                        <td className='hidden md:table-cell px-6 py-4 whitespace-nowrap'>\n                          <div className='text-lg leading-5 font-semibold text-blue-500 '>\n                            {datum.totalViews.total}\n                          </div>\n                        </td>\n                        <td className='px-2 md:px-6 py-4 whitespace-nowrap flex flex-col items-start justify-center'>\n                          {/* <div className='text-md leading-5 font-semibold text-blue-500 md:hidden text-center'>\n                            TOTAL {datum.totalViews.total}\n                          </div> */}\n                          <div className='w-36 h-20 md:w-40 overflow-hidden flex items-center justify-around'>\n                            <Donut\n                              data={formatDataForChart(datum)}\n                              options={{\n                                plugins: {\n                                  legend: {\n                                    position: 'right',\n                                    align: 'center',\n                                  },\n                                },\n                              }}\n                            ></Donut>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default Table\n","import { FC, useState } from 'react'\nimport Table from 'components/charts/Table'\nimport Card from 'components/Card'\nimport Modal from 'components/Modal'\nimport { useDataFetcher } from 'hooks/useDataFetcher'\nimport { DatumI } from 'models/types'\n\nconst url =\n  'https://my-json-server.typicode.com/alb90/aieng-tech-test-assets/data'\n\nconst Overview: FC = () => {\n  const [modal, setModal] = useState({ visible: false, data: {} as DatumI })\n  const { data } = useDataFetcher(url)\n\n  return (\n    <>\n      {modal.visible ? (\n        <Modal data={modal.data} setModal={setModal}></Modal>\n      ) : null}\n      <div className='relative bg-gradient-to-t from-indigo-900 to-blueGray-900'>\n        <h2 className='px-12 pt-12 text-blueGray-100 text-3xl text-light uppercase tracking-wide'>\n          <i className='fas fa-medal text-blueGray-100 mr-2'></i> Top performers\n        </h2>\n        <div className='px-4 md:px-10 mx-auto w-full md:pt-24 pb-32 pt-8'>\n          <div className='flex items-center justify-between flex-wrap'>\n            {[...data]\n              .sort((a: DatumI, b: DatumI) => {\n                // sort by biggest growth\n                if (\n                  a.totalViews.total - a.prevTotalViews.total <\n                  b.totalViews.total - b.prevTotalViews.total\n                )\n                  return -1\n                return 1\n              })\n              .slice(0, 3)\n              .map((datum: DatumI) => {\n                return (\n                  <Card\n                    data={datum}\n                    handleClick={() =>\n                      setModal({\n                        visible: true,\n                        data: datum,\n                      })\n                    }\n                  ></Card>\n                )\n              })}\n          </div>\n        </div>\n      </div>\n\n      <div className='relative px-4 md:px-10 mx-auto w-full -mt-24 z-30'>\n        <Table data={data} handleClick={setModal} />\n      </div>\n    </>\n  )\n}\n\nexport default Overview\n","import { Suspense } from 'react'\n\nimport { Overview } from 'views'\nimport { Skeleton, Layout } from 'components'\n\nfunction OverviewPage() {\n  return (\n    <Layout>\n      <Suspense fallback={<Skeleton />}>\n        <Overview />\n      </Suspense>\n    </Layout>\n  )\n}\n\nexport default OverviewPage\n","import React, { FC } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport { Content, Event, Overview } from 'pages'\n\nimport { RouteI } from 'models/types'\n\nconst routes: Array<RouteI> = [\n  {\n    path: '/content',\n    component: Content,\n    exact: true,\n  },\n  {\n    path: '/content/:event',\n    component: Event,\n  },\n  {\n    path: '/',\n    component: Overview,\n    exact: true,\n  },\n]\n\n// Pass routes through context\nconst App: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            path={route.path}\n            render={(props) => <route.component {...props} />}\n            exact={route.exact}\n          ></Route>\n        ))}\n        <Route render={() => <Redirect to='/' />}></Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import { Suspense } from 'react'\n\nimport { Content } from 'views'\nimport { Skeleton, Layout } from 'components'\n\nfunction ContentPage() {\n  return (\n    <Layout>\n      <Suspense fallback={<Skeleton />}>\n        <Content />\n      </Suspense>\n    </Layout>\n  )\n}\n\nexport default ContentPage\n","import { Event } from 'views'\nimport { Layout } from 'components'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { DatumI } from 'models/types'\n\nfunction EventPage({ location }: RouteComponentProps) {\n  return (\n    <Layout>\n      <Event data={location.state as DatumI} />\n    </Layout>\n  )\n}\n\nexport default EventPage\n"],"sourceRoot":""}