{"version":3,"sources":["../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/parseISO/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/addHours/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js","../node_modules/date-fns/esm/addSeconds/index.js","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/addQuarters/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/differenceInMinutes/index.js","../node_modules/date-fns/esm/differenceInWeeks/index.js","../node_modules/date-fns/esm/differenceInQuarters/index.js","../node_modules/date-fns/esm/differenceInYears/index.js","../node_modules/date-fns/esm/startOfSecond/index.js","../node_modules/date-fns/esm/startOfMinute/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/startOfQuarter/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfSecond/index.js","../node_modules/date-fns/esm/endOfMinute/index.js","../node_modules/date-fns/esm/endOfHour/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfQuarter/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/dequal/lite/index.mjs","../node_modules/swr/esm/libs/hash.js","../node_modules/swr/esm/cache.js","../node_modules/swr/esm/libs/web-preset.js","../node_modules/swr/esm/config.js","../node_modules/swr/esm/env.js","../node_modules/swr/esm/swr-config-context.js","../node_modules/swr/esm/use-swr.js","../node_modules/swr/esm/index.js"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","array","predicate","key","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","locale","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","isNaN","Math","ceil","floor","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","subMilliseconds","assign","target","dirtyObject","property","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","RangeError","concat","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","startOfUTCISOWeek","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeekYear","firstWeek","getUTCWeek","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","subPriority","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","hours","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dateToSystemTimezone","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","cleanEscapedString","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","splitDateString","dateString","timeString","dateStrings","split","substr","exec","parseYear","additionalDigits","regex","captures","century","restDateString","parseDate","isWeekDate","dayOfYear","parseDateUnit","dayOfWeek","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","validateDate","validateDayOfYearDate","max","parseTime","parseTimeUnit","minutes","seconds","validateTime","parseFloat","parseTimezone","timezoneString","sign","_hours","validateTimezone","isValid","addLeadingZeros","targetLength","output","abs","formatters","signedYear","dayPeriodEnumValue","toUpperCase","numberOfDigits","milliseconds","MILLISECONDS_IN_DAY","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","lightFormatters","signedWeekYear","weekYear","startOfYearTimestamp","difference","getUTCDayOfYear","localDayOfWeek","isoDayOfWeek","toLowerCase","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","originalDate","addDays","setDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","daysInMonth","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","startOfDay","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","compareLocalAsc","differenceInDays","isLastDayNotFull","differenceInCalendarMonths","yearDiff","monthDiff","compareAsc","endOfDay","endOfMonth","isLastDayOfMonth","differenceInMonths","isLastMonthNotFull","differenceInCalendarYears","startOfWeek","getDay","FORMATS","datetime","millisecond","second","minute","hour","_adapters","override","_id","fmt","type","dirtyDateString","dirtyFormatString","dirtyReferenceDate","formatString","defaultLocale","subFnOptions","setters","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","fullToken","push","uniquePrioritySetters","setter","sort","filter","setterArray","this","parseYearResult","parseISO","dirtyFormatStr","formatStr","formatterOptions","formatter","add","addSeconds","addMinutes","addHours","addWeeks","addQuarters","addYears","min","differenceInSeconds","differenceInMinutes","differenceInHours","differenceInWeeks","differenceInQuarters","isLastYearNotFull","differenceInYears","startOf","weekday","setMilliseconds","startOfSecond","setSeconds","startOfMinute","setMinutes","startOfHour","startOfMonth","currentMonth","startOfQuarter","cleanDate","startOfYear","endOf","endOfSecond","endOfMinute","endOfHour","endOfWeek","endOfQuarter","endOfYear","has","table","WeakMap","counter","Cache","initialData","cache","Map","entries","subs","get","_key","serializeKey","notify","keys","from","clear","delete","err","_hash","hash","subscribe","listener","_this","isSubscribed","_a","online","isOnline","isDocumentVisible","document","undefined","visibilityState","fetcher","url","fetch","then","res","json","registerOnFocus","cb","window","addEventListener","registerOnReconnect","__assign","apply","slowConnection","navigator","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","dequal","foo","bar","ctor","len","constructor","isPaused","webPreset","IS_SERVER","Deno","version","deno","rAF","f","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","SWRConfigContext","createContext","displayName","__awaiter","thisArg","_arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","__generator","body","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","RECONNECT_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","now","ts","revalidate_1","revalidators","trigger","shouldRevalidate","keyErr","keyValidating","updaters","currentData","currentError","currentIsValidating","promises","all","broadcastState","data","error","isValidating","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","isAsyncMutation","err_1","shouldAbort","_b","defineProperty","Provider","useSWR","useContext","fn","fnArgs","configRef","useRef","current","willRevalidateOnMount","revalidateOnMount","resolveData","cachedData","resolveIsValidating","initialError","initialIsValidating","stateDependencies","stateRef","useDebugValue","latestData","latestError","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","unmountedRef","initialMountedRef","keyRef","eventsCallback","event","params","boundMutate","addRevalidator","callback","keyedRevalidators","revalidateOpts","dedupe","loading","shouldDeduping","newData","startAt","newState","err_2","_c","isUpdating","currentHookData","latestKeyedData","softRevalidate","pending","unsubFocus","unsubReconnect","unsubUpdate","updatedData","updatedError","updatedIsValidating","needUpdate","timer","tick","clearTimeout","memoizedState","useMemo","state","defineProperties","enumerable"],"mappings":"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","file":"static/js/3.7bb4cb11.chunk.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/*!\n * chartjs-adapter-date-fns v2.0.0\n * https://www.chartjs.org\n * (c) 2021 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\n\nconst FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns', // DEBUG\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n    const type = typeof value;\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n    return isValid(value) ? value.getTime() : null;\n  },\n\n  format: function(time, fmt) {\n    return format(time, fmt, this.options);\n  },\n\n  add: function(time, amount, unit) {\n    switch (unit) {\n    case 'millisecond': return addMilliseconds(time, amount);\n    case 'second': return addSeconds(time, amount);\n    case 'minute': return addMinutes(time, amount);\n    case 'hour': return addHours(time, amount);\n    case 'day': return addDays(time, amount);\n    case 'week': return addWeeks(time, amount);\n    case 'month': return addMonths(time, amount);\n    case 'quarter': return addQuarters(time, amount);\n    case 'year': return addYears(time, amount);\n    default: return time;\n    }\n  },\n\n  diff: function(max, min, unit) {\n    switch (unit) {\n    case 'millisecond': return differenceInMilliseconds(max, min);\n    case 'second': return differenceInSeconds(max, min);\n    case 'minute': return differenceInMinutes(max, min);\n    case 'hour': return differenceInHours(max, min);\n    case 'day': return differenceInDays(max, min);\n    case 'week': return differenceInWeeks(max, min);\n    case 'month': return differenceInMonths(max, min);\n    case 'quarter': return differenceInQuarters(max, min);\n    case 'year': return differenceInYears(max, min);\n    default: return 0;\n    }\n  },\n\n  startOf: function(time, unit, weekday) {\n    switch (unit) {\n    case 'second': return startOfSecond(time);\n    case 'minute': return startOfMinute(time);\n    case 'hour': return startOfHour(time);\n    case 'day': return startOfDay(time);\n    case 'week': return startOfWeek(time);\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\n    case 'month': return startOfMonth(time);\n    case 'quarter': return startOfQuarter(time);\n    case 'year': return startOfYear(time);\n    default: return time;\n    }\n  },\n\n  endOf: function(time, unit) {\n    switch (unit) {\n    case 'second': return endOfSecond(time);\n    case 'minute': return endOfMinute(time);\n    case 'hour': return endOfHour(time);\n    case 'day': return endOfDay(time);\n    case 'week': return endOfWeek(time);\n    case 'month': return endOfMonth(time);\n    case 'quarter': return endOfQuarter(time);\n    case 'year': return endOfYear(time);\n    default: return time;\n    }\n  }\n});\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from \"../differenceInDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMonths from \"../differenceInMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var has = Object.prototype.hasOwnProperty;\n\nexport function dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nvar table = new WeakMap();\n// counter of the key\nvar counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    var key = 'arg';\n    for (var i = 0; i < args.length; ++i) {\n        if (args[i] === null) {\n            key += '@null';\n            continue;\n        }\n        var _hash = void 0;\n        if (typeof args[i] !== 'object' && typeof args[i] !== 'function') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","import hash from './libs/hash';\nvar Cache = /** @class */ (function () {\n    function Cache(initialData) {\n        if (initialData === void 0) { initialData = {}; }\n        this.cache = new Map(Object.entries(initialData));\n        this.subs = [];\n    }\n    Cache.prototype.get = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.cache.get(_key);\n    };\n    Cache.prototype.set = function (key, value) {\n        var _key = this.serializeKey(key)[0];\n        this.cache.set(_key, value);\n        this.notify();\n    };\n    Cache.prototype.keys = function () {\n        return Array.from(this.cache.keys());\n    };\n    Cache.prototype.has = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.cache.has(_key);\n    };\n    Cache.prototype.clear = function () {\n        this.cache.clear();\n        this.notify();\n    };\n    Cache.prototype.delete = function (key) {\n        var _key = this.serializeKey(key)[0];\n        this.cache.delete(_key);\n        this.notify();\n    };\n    // TODO: introduce namespace for the cache\n    Cache.prototype.serializeKey = function (key) {\n        var args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        var errorKey = key ? 'err@' + key : '';\n        var isValidatingKey = key ? 'validating@' + key : '';\n        return [key, args, errorKey, isValidatingKey];\n    };\n    Cache.prototype.subscribe = function (listener) {\n        var _this = this;\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        var isSubscribed = true;\n        this.subs.push(listener);\n        return function () {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            var index = _this.subs.indexOf(listener);\n            if (index > -1) {\n                _this.subs[index] = _this.subs[_this.subs.length - 1];\n                _this.subs.length--;\n            }\n        };\n    };\n    // Notify Cache subscribers about a change in the cache\n    Cache.prototype.notify = function () {\n        for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener();\n        }\n    };\n    return Cache;\n}());\nexport default Cache;\n","/**\n * Due to bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a work around, we always assume it's online on first load, and change\n * the status upon `online` or `offline` events.\n */\nvar online = true;\nvar isOnline = function () { return online; };\nvar isDocumentVisible = function () {\n    if (typeof document !== 'undefined' &&\n        document.visibilityState !== undefined) {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n};\nvar fetcher = function (url) { return fetch(url).then(function (res) { return res.json(); }); };\nvar registerOnFocus = function (cb) {\n    if (typeof window !== 'undefined' &&\n        window.addEventListener !== undefined &&\n        typeof document !== 'undefined' &&\n        document.addEventListener !== undefined) {\n        // focus revalidate\n        document.addEventListener('visibilitychange', function () { return cb(); }, false);\n        window.addEventListener('focus', function () { return cb(); }, false);\n    }\n};\nvar registerOnReconnect = function (cb) {\n    if (typeof window !== 'undefined' && window.addEventListener !== undefined) {\n        // reconnect revalidate\n        window.addEventListener('online', function () {\n            online = true;\n            cb();\n        }, false);\n        // nothing to revalidate, just update the status\n        window.addEventListener('offline', function () { return (online = false); }, false);\n    }\n};\nexport default {\n    isOnline: isOnline,\n    isDocumentVisible: isDocumentVisible,\n    fetcher: fetcher,\n    registerOnFocus: registerOnFocus,\n    registerOnReconnect: registerOnReconnect\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { dequal } from 'dequal/lite';\nimport Cache from './cache';\nimport webPreset from './libs/web-preset';\n// cache\nvar cache = new Cache();\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!config.isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (typeof config.errorRetryCount === 'number' &&\n        opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    var count = Math.min(opts.retryCount, 8);\n    var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nvar slowConnection = typeof window !== 'undefined' &&\n    // @ts-ignore\n    navigator['connection'] &&\n    // @ts-ignore\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nvar defaultConfig = __assign({ \n    // events\n    onLoadingSlow: function () { }, onSuccess: function () { }, onError: function () { }, onErrorRetry: onErrorRetry, errorRetryInterval: (slowConnection ? 10 : 5) * 1000, focusThrottleInterval: 5 * 1000, dedupingInterval: 2 * 1000, loadingTimeout: (slowConnection ? 5 : 3) * 1000, refreshInterval: 0, revalidateOnFocus: true, revalidateOnReconnect: true, refreshWhenHidden: false, refreshWhenOffline: false, shouldRetryOnError: true, suspense: false, compare: dequal, isPaused: function () { return false; } }, webPreset);\nexport { cache };\nexport default defaultConfig;\n","import { useEffect, useLayoutEffect } from 'react';\nexport var IS_SERVER = typeof window === 'undefined' ||\n    // @ts-ignore\n    !!(typeof Deno !== 'undefined' && Deno && Deno.version && Deno.version.deno);\n// polyfill for requestAnimationFrame\nexport var rAF = IS_SERVER\n    ? null\n    : window['requestAnimationFrame']\n        ? function (f) { return window['requestAnimationFrame'](f); }\n        : function (f) { return setTimeout(f, 1); };\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport var useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n","import { createContext } from 'react';\nvar SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n// TODO: use @ts-expect-error\nimport { useCallback, useContext, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport { IS_SERVER, rAF, useIsomorphicLayoutEffect } from './env';\nimport SWRConfigContext from './swr-config-context';\n// global state managers\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {};\n// generate strictly increasing timestamps\nvar now = (function () {\n    var ts = 0;\n    return function () { return ++ts; };\n})();\n// setup DOM events listeners for `focus` and `reconnect` actions\nif (!IS_SERVER) {\n    var revalidate_1 = function (revalidators) {\n        if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline())\n            return;\n        for (var key in revalidators) {\n            if (revalidators[key][0])\n                revalidators[key][0]();\n        }\n    };\n    if (typeof defaultConfig.registerOnFocus === 'function') {\n        defaultConfig.registerOnFocus(function () { return revalidate_1(FOCUS_REVALIDATORS); });\n    }\n    if (typeof defaultConfig.registerOnReconnect === 'function') {\n        defaultConfig.registerOnReconnect(function () { return revalidate_1(RECONNECT_REVALIDATORS); });\n    }\n}\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2], keyValidating = _a[3];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var currentIsValidating = cache.get(keyValidating);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error, isValidating) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error, isValidating);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, isAsyncMutation, err_1, shouldAbort, updaters, promises, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data to update, let's just revalidate the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update global timestamps\n                        ];\n                    // update global timestamps\n                    MUTATION_TS[key] = now() - 1;\n                    MUTATION_END_TS[key] = 0;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    isAsyncMutation = false;\n                    if (_data && typeof _data === 'function') {\n                        // `_data` is a function, call it passing current cache value\n                        try {\n                            _data = _data(cache.get(key));\n                        }\n                        catch (err) {\n                            // if `_data` function throws an error synchronously, it shouldn't be cached\n                            _data = undefined;\n                            error = err;\n                        }\n                    }\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 5];\n                    // `_data` is a promise\n                    isAsyncMutation = true;\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _b.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    data = _data;\n                    _b.label = 6;\n                case 6:\n                    shouldAbort = function () {\n                        // check if other mutations have occurred since we've started this mutation\n                        if (beforeMutationTs !== MUTATION_TS[key] ||\n                            beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                            if (error)\n                                throw error;\n                            return true;\n                        }\n                    };\n                    // if there's a race we don't update cache or broadcast change, just return the data\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    if (typeof data !== 'undefined') {\n                        // update cached data\n                        cache.set(key, data);\n                    }\n                    // always update or reset the error\n                    cache.set(keyErr, error);\n                    // reset the timestamp to mark the mutation has ended\n                    MUTATION_END_TS[key] = now() - 1;\n                    if (!isAsyncMutation) {\n                        // we skip broadcasting if there's another mutation happened synchronously\n                        if (shouldAbort())\n                            return [2 /*return*/, data];\n                    }\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                if (error)\n                                    throw error;\n                                return cache.get(key);\n                            })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key = args[0];\n    var config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), args.length > 2\n        ? args[2]\n        : args.length === 2 && typeof args[1] === 'object'\n            ? args[1]\n            : {});\n    // in typescript args.length > 2 is not same as args.lenth === 3\n    // we do a safe type assertion here\n    // args.length === 3\n    var fn = (args.length > 2\n        ? args[1]\n        : args.length === 2 && typeof args[1] === 'function'\n            ? args[1]\n            : /**\n                  pass fn as null will disable revalidate\n                  https://paco.sh/blog/shared-hook-state-with-swr\n                */\n                args[1] === null\n                    ? args[1]\n                    : config.fetcher);\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2], keyValidating = _a[3];\n    var configRef = useRef(config);\n    useIsomorphicLayoutEffect(function () {\n        configRef.current = config;\n    });\n    var willRevalidateOnMount = function () {\n        return (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined));\n    };\n    var resolveData = function () {\n        var cachedData = cache.get(key);\n        return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n    };\n    var resolveIsValidating = function () {\n        return !!cache.get(keyValidating) || (key && willRevalidateOnMount());\n    };\n    var initialData = resolveData();\n    var initialError = cache.get(keyErr);\n    var initialIsValidating = resolveIsValidating();\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: initialIsValidating\n    });\n    // display the data label in the React DevTools next to SWR hooks\n    useDebugValue(stateRef.current.data);\n    var rerender = useState({})[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            // @ts-ignore\n            if (stateRef.current[k] === payload[k]) {\n                continue;\n            }\n            // @ts-ignore\n            stateRef.current[k] = payload[k];\n            // @ts-ignore\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState) {\n            // if component is unmounted, should skip rerender\n            // if component is not mounted, should skip rerender\n            if (unmountedRef.current || !initialMountedRef.current)\n                return;\n            rerender({});\n        }\n    }, \n    // config.suspense isn't allowed to change during the lifecycle\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // check if component is mounted in suspense mode\n    var initialMountedRef = useRef(false);\n    // do unmount check for callbacks\n    var eventsCallback = useCallback(function (event) {\n        var _a;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (unmountedRef.current)\n            return;\n        if (!initialMountedRef.current)\n            return;\n        if (key !== keyRef.current)\n            return;\n        // @ts-ignore\n        (_a = configRef.current)[event].apply(_a, params);\n    }, [key]);\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(keyRef.current, data, shouldRevalidate);\n    }, []);\n    var addRevalidator = function (revalidators, callback) {\n        if (!revalidators[key]) {\n            revalidators[key] = [callback];\n        }\n        else {\n            revalidators[key].push(callback);\n        }\n        return function () {\n            var keyedRevalidators = revalidators[key];\n            var index = keyedRevalidators.indexOf(callback);\n            if (index >= 0) {\n                // O(1): faster than splice\n                keyedRevalidators[index] =\n                    keyedRevalidators[keyedRevalidators.length - 1];\n                keyedRevalidators.pop();\n            }\n        };\n    };\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var _a, retryCount, _b, dedupe, loading, shouldDeduping, newData, startAt, newState, err_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        if (configRef.current.isPaused())\n                            return [2 /*return*/, false];\n                        _a = revalidateOpts.retryCount, retryCount = _a === void 0 ? 0 : _a, _b = revalidateOpts.dedupe, dedupe = _b === void 0 ? false : _b;\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && dedupe;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        cache.set(keyValidating, true);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n                        }\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _c.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsCallback('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _c.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsCallback('onSuccess', newData, key, config);\n                        _c.label = 5;\n                    case 5:\n                        // if there're other ongoing request(s), started after the current one,\n                        // we need to ignore the current one to avoid possible race conditions:\n                        //   req1------------------>res1        (current one)\n                        //        req2---------------->res2\n                        // the request that fired later will always be kept.\n                        if (CONCURRENT_PROMISES_TS[key] > startAt) {\n                            return [2 /*return*/, false];\n                        }\n                        // if there're other mutations(s), overlapped with the current revalidation:\n                        // case 1:\n                        //   req------------------>res\n                        //       mutate------>end\n                        // case 2:\n                        //         req------------>res\n                        //   mutate------>end\n                        // case 3:\n                        //   req------------------>res\n                        //       mutate-------...---------->\n                        // we have to ignore the revalidation result (res) because it's no longer fresh.\n                        // meanwhile, a new revalidation should be triggered when the mutation ends.\n                        if (MUTATION_TS[key] &&\n                            // case 1\n                            (startAt <= MUTATION_TS[key] ||\n                                // case 2\n                                startAt <= MUTATION_END_TS[key] ||\n                                // case 3\n                                MUTATION_END_TS[key] === 0)) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, undefined);\n                        cache.set(keyValidating, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                        }\n                        if (!config.compare(cache.get(key), newData)) {\n                            cache.set(key, newData);\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, newState.error, false);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_2 = _c.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        if (configRef.current.isPaused()) {\n                            dispatch({\n                                isValidating: false\n                            });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, err_2);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_2) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_2\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_2, false);\n                            }\n                        }\n                        // events and retry\n                        eventsCallback('onError', err_2, key, config);\n                        if (config.shouldRetryOnError) {\n                            // when retrying, we always enable deduping\n                            eventsCallback('onErrorRetry', err_2, key, config, revalidate, {\n                                retryCount: retryCount + 1,\n                                dedupe: true\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, \n    // dispatch is immutable, and `eventsCallback`, `fnArgs`, `keyErr`, and `keyValidating` are based on `key`,\n    // so we can them from the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // useSWR('key', () => fetch('/api/'), { suspense: true })\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        var isUpdating = initialMountedRef.current;\n        initialMountedRef.current = true;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = resolveData();\n        // update the state if the key changed (not the inital render) or cache updated\n        keyRef.current = key;\n        if (!config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (isUpdating || willRevalidateOnMount()) {\n            if (typeof latestKeyedData !== 'undefined' && !IS_SERVER) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                // @ts-ignore it's safe to use requestAnimationFrame in browser\n                rAF(softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        var pending = false;\n        var onFocus = function () {\n            if (pending || !configRef.current.revalidateOnFocus)\n                return;\n            pending = true;\n            softRevalidate();\n            setTimeout(function () { return (pending = false); }, configRef.current.focusThrottleInterval);\n        };\n        var onReconnect = function () {\n            if (configRef.current.revalidateOnReconnect) {\n                softRevalidate();\n            }\n        };\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (typeof updatedIsValidating !== 'undefined' &&\n                stateRef.current.isValidating !== updatedIsValidating) {\n                newState.isValidating = updatedIsValidating;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        var unsubFocus = addRevalidator(FOCUS_REVALIDATORS, onFocus);\n        var unsubReconnect = addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n        var unsubUpdate = addRevalidator(CACHE_REVALIDATORS, onUpdate);\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            unsubFocus();\n            unsubReconnect();\n            unsubUpdate();\n        };\n    }, [key, revalidate]);\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (configRef.current.refreshWhenHidden ||\n                                configRef.current.isDocumentVisible()) &&\n                            (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Read the latest refreshInterval\n                        if (configRef.current.refreshInterval && timer) {\n                            timer = setTimeout(tick, configRef.current.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (configRef.current.refreshInterval) {\n            timer = setTimeout(tick, configRef.current.refreshInterval);\n        }\n        return function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    var latestData;\n    var latestError;\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        latestData = cache.get(key);\n        latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined') {\n            latestData = initialData;\n        }\n        if (typeof latestError === 'undefined') {\n            latestError = initialError;\n        }\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                // in this revalidate, should not rerender\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    var memoizedState = useMemo(function () {\n        // revalidate will be deprecated in the 1.x release\n        // because mutate() covers the same use case of revalidate().\n        // This remains only for backward compatibility\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    if (config.suspense) {\n                        return latestError;\n                    }\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    if (config.suspense) {\n                        return latestData;\n                    }\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return key ? stateRef.current.isValidating : false;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n        // `config.suspense` isn't allowed to change during the lifecycle.\n        // `boundMutate` is immutable, and the immutability of `revalidate` depends on `key`\n        // so we can omit them from the deps array,\n        // but we put it to enable react-hooks/exhaustive-deps rule.\n        // `initialData` and `initialError` are not initial values\n        // because they are changed during the lifecycle\n        // so we should add them in the deps array.\n    }, [\n        revalidate,\n        initialData,\n        initialError,\n        boundMutate,\n        key,\n        config.suspense,\n        latestError,\n        latestData\n    ]);\n    return memoizedState;\n}\nObject.defineProperty(SWRConfigContext.Provider, 'default', {\n    value: defaultConfig\n});\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","// `useSWR` and related APIs\nimport { default as useSWR } from './use-swr';\nexport default useSWR;\nexport * from './use-swr';\n// `useSWRInfinite`\nexport { useSWRInfinite } from './use-swr-infinite';\n// Cache related, to be replaced by the new APIs\nexport { cache } from './config';\n"],"sourceRoot":""}